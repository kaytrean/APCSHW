graphs - collection of nodes and edges
node - holds stuff
edge - connects nodes
cyclic and acyclic graph (we started a node, can we get back to that node without going back?)

weights - some associated value with the edge
in weighted graph, both nodes and edges have stuff
directed graph - can't get to a particular node 
DAG - Directed Acyclic Graph
Trees - empty or acycilic graph with one node designated as the root
  ~root - starting point
  ~child - connected to end level down from its parent node
  ~leaf - node with 0 children
  ~path - sequence of nodes and/or edges connecting 2 nodes
  ~ancestors - any nodes above you connecting you to the root
  ~descendants - any nodes on your subtrees
  ~height - length of longest root to leaf path
  ~fullest - one with maxium number of nodes
  ~balance - number of nodes coming off 
  
Binary Tree - each node has 0, 1 or 2 children; either leaf or a left/right child
